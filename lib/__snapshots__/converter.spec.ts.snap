// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`converter json-schema-to-ts self-reading and writing JSON Schema 1`] = `
"export type foo = string;
"
`;

exports[`converter shortcut should run graph if necessary (gql->st) 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file is generated by core-types-suretype on behalf of typeconv, DO NOT EDIT.
 * For more information, see:
 *  - {@link https://github.com/grantila/core-types-suretype}
 *  - {@link https://github.com/grantila/typeconv}
 */

import { suretype, v, compile, annotate } from 'suretype';

/** The validation schema for a Foo */
export const schemaFoo = suretype({
    name: "Foo",
    title: "Foo",
    description: "The Foo type"
}, v.object({
    int: annotate({
        title: "Foo.int",
        description: "This is the integer thing\\n\\n@default 55"
    }, v.number().integer()),
    str: annotate({
        title: "Foo.str"
    }, v.string().required()),
    stra: annotate({
        title: "Foo.stra",
        description: "Excellent array of strings"
    }, v.array(v.string()).required())
}));

/** The Foo type */
export interface Foo {
    /**
     * This is the integer thing
     *
     * @default 55
     */
    int?: number;
    str: string;
    /** Excellent array of strings */
    stra: string[];
}

/**
 * ## Validate that a variable is a Foo
 *
 * @returns ValidationResult
 */
export const validateFoo = compile(schemaFoo);

/**
 * ## Ensure a variable is a Foo
 *
 * This call will throw a ValidationError if the variable isn't a Foo.
 *
 * If the variable **is** a Foo, the returned variable will be of that type.
 */
export const ensureFoo = compile<typeof schemaFoo, Foo>(schemaFoo, { ensure: true });

/**
 * ## Validates that a variable is a Foo
 *
 * @returns boolean
 */
export const isFoo = compile(schemaFoo, { simple: true });
"
`;

exports[`converter shortcut should run graph if necessary (st->oapi) 1`] = `
"openapi: 3.0.0
info:
  title: Title
  version: '1'
  x-comment: >-
    Generated from validator.st.js by core-types-suretype
    (https://github.com/grantila/core-types-suretype) on behalf of typeconv
    (https://github.com/grantila/typeconv)
paths: {}
components:
  schemas:
    Foo:
      description: This is Foo
      properties:
        gt5:
          exclusiveMinimum: 5
          type: number
        gte5:
          minimum: 5
          type: number
      type: object
"
`;

exports[`converter shortcut should run shortcut if possible 1`] = `
"openapi: 3.0.0
info:
  title: Title
  version: '1'
  x-comment: >-
    Generated by core-types-json-schema
    (https://github.com/grantila/core-types-json-schema) on behalf of typeconv
    (https://github.com/grantila/typeconv)
paths: {}
components:
  schemas:
    foo:
      type: string
"
`;
